name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - elixir: '1.12'
            otp: '22'
          - elixir: '1.13'
            otp: '24'
          - elixir: '1.14'
            otp: '25'
          - elixir: '1.15'
            otp: '26'
          - elixir: '1.16'
            otp: '26'
          - elixir: '1.17'
            otp: '27'
          - elixir: '1.18'
            otp: '27'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Elixir dependencies
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            native/ex_jsonschema/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        run: mix format --check-formatted
        if: matrix.elixir >= '1.13'

      - name: Run tests
        run: EX_JSONSCHEMA_BUILD=1 mix test
        env:
          MIX_ENV: test

      - name: Check documentation can be generated
        run: mix docs
        if: matrix.elixir >= '1.15'

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '27'

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Run Credo
        run: mix credo --strict
        continue-on-error: true

      - name: Check Rust formatting
        run: cd native/ex_jsonschema && cargo fmt --all -- --check

      - name: Run Clippy
        run: cd native/ex_jsonschema && cargo clippy -- -D warnings 