name: Build precompiled NIFs

on:
  push:
    branches:
      - main
    paths:
      - "native/**"
      - ".github/workflows/release.yml"
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.17"]
        job:
          - { target: aarch64-apple-darwin   , os: macos-14       }
          - { target: x86_64-apple-darwin    , os: macos-13       }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-22.04 }
          - { target: x86_64-pc-windows-msvc, os: windows-2022   }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Extract project version
        shell: bash
        run: |
          echo "PROJECT_VERSION=$(sed -n 's/^  @version \"\(.*\)\"/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}

      - name: Build the project
        id: build-crate
        uses: philss/rustler-precompiled-action@v1.1.4
        with:
          project-name: ex_jsonschema
          project-version: ${{ env.PROJECT_VERSION }}
          target: ${{ matrix.job.target }}
          nif-version: ${{ matrix.nif }}
          use-cross: false
          project-dir: "native/ex_jsonschema"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-crate.outputs.file-name }}
          path: ${{ steps.build-crate.outputs.file-path }}

      - name: Publish archives and packages
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.build-crate.outputs.file-path }}
        if: startsWith(github.ref, 'refs/tags/')

  publish_hex:
    name: Publish to Hex.pm
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [build_release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '27'

      - name: Install dependencies
        run: mix deps.get

      - name: Publish to Hex
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: |
          mix hex.publish --yes 